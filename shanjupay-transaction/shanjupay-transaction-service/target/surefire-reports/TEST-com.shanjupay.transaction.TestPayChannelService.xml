<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.shanjupay.transaction.TestPayChannelService" time="13.797" tests="1" errors="1" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="GBK"/>
    <property name="java.class.path" value="D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\test-classes;D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes;D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-api\target\shanjupay-transaction-api-1.0-SNAPSHOT.jar;E:\APP\repository3\com\shanjupay\shanjupay-common\1.0-SNAPSHOT\shanjupay-common-1.0-SNAPSHOT.jar;E:\APP\repository3\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;E:\APP\repository3\io\springfox\springfox-swagger2\2.9.2\springfox-swagger2-2.9.2.jar;E:\APP\repository3\io\swagger\swagger-annotations\1.5.20\swagger-annotations-1.5.20.jar;E:\APP\repository3\io\swagger\swagger-models\1.5.20\swagger-models-1.5.20.jar;E:\APP\repository3\io\springfox\springfox-spi\2.9.2\springfox-spi-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-core\2.9.2\springfox-core-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-schema\2.9.2\springfox-schema-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-swagger-common\2.9.2\springfox-swagger-common-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-spring-web\2.9.2\springfox-spring-web-2.9.2.jar;E:\APP\repository3\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;E:\APP\repository3\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;E:\APP\repository3\io\springfox\springfox-swagger-ui\2.9.2\springfox-swagger-ui-2.9.2.jar;E:\APP\repository3\org\projectlombok\lombok\1.18.0\lombok-1.18.0.jar;E:\APP\repository3\com\qiniu\qiniu-java-sdk\7.2.25\qiniu-java-sdk-7.2.25.jar;E:\APP\repository3\com\squareup\okhttp3\okhttp\3.9.1\okhttp-3.9.1.jar;E:\APP\repository3\com\squareup\okio\okio\1.13.0\okio-1.13.0.jar;E:\APP\repository3\com\google\code\gson\gson\2.8.2\gson-2.8.2.jar;E:\APP\repository3\com\alibaba\fastjson\1.2.47\fastjson-1.2.47.jar;E:\APP\repository3\com\google\zxing\core\3.3.3\core-3.3.3.jar;E:\APP\repository3\com\google\zxing\javase\3.3.3\javase-3.3.3.jar;E:\APP\repository3\com\beust\jcommander\1.72\jcommander-1.72.jar;E:\APP\repository3\com\github\jai-imageio\jai-imageio-core\1.4.0\jai-imageio-core-1.4.0.jar;E:\APP\repository3\com\shanjupay\shanjupay-payment-agent-api\1.0-SNAPSHOT\shanjupay-payment-agent-api-1.0-SNAPSHOT.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-starter-alibaba-nacos-config\2.1.0.RELEASE\spring-cloud-starter-alibaba-nacos-config-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-alibaba-nacos-config\2.1.0.RELEASE\spring-cloud-alibaba-nacos-config-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\nacos\nacos-client\1.1.1\nacos-client-1.1.1.jar;E:\APP\repository3\com\alibaba\nacos\nacos-common\1.1.1\nacos-common-1.1.1.jar;E:\APP\repository3\com\alibaba\nacos\nacos-api\1.1.1\nacos-api-1.1.1.jar;E:\APP\repository3\io\prometheus\simpleclient\0.5.0\simpleclient-0.5.0.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-commons\2.1.0.RELEASE\spring-cloud-commons-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\security\spring-security-crypto\5.1.4.RELEASE\spring-security-crypto-5.1.4.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-context\2.1.0.RELEASE\spring-cloud-context-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-starter-alibaba-nacos-discovery\2.1.0.RELEASE\spring-cloud-starter-alibaba-nacos-discovery-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-alibaba-nacos-discovery\2.1.0.RELEASE\spring-cloud-alibaba-nacos-discovery-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-starter-netflix-ribbon\2.1.0.RELEASE\spring-cloud-starter-netflix-ribbon-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-starter\2.1.0.RELEASE\spring-cloud-starter-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\security\spring-security-rsa\1.0.7.RELEASE\spring-security-rsa-1.0.7.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-netflix-ribbon\2.1.0.RELEASE\spring-cloud-netflix-ribbon-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-netflix-archaius\2.1.0.RELEASE\spring-cloud-netflix-archaius-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-starter-netflix-archaius\2.1.0.RELEASE\spring-cloud-starter-netflix-archaius-2.1.0.RELEASE.jar;E:\APP\repository3\com\netflix\archaius\archaius-core\0.7.6\archaius-core-0.7.6.jar;E:\APP\repository3\commons-configuration\commons-configuration\1.8\commons-configuration-1.8.jar;E:\APP\repository3\com\netflix\ribbon\ribbon\2.3.0\ribbon-2.3.0.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-transport\2.3.0\ribbon-transport-2.3.0.jar;E:\APP\repository3\io\reactivex\rxnetty-contexts\0.4.9\rxnetty-contexts-0.4.9.jar;E:\APP\repository3\io\reactivex\rxnetty-servo\0.4.9\rxnetty-servo-0.4.9.jar;E:\APP\repository3\com\netflix\hystrix\hystrix-core\1.5.18\hystrix-core-1.5.18.jar;E:\APP\repository3\javax\inject\javax.inject\1\javax.inject-1.jar;E:\APP\repository3\io\reactivex\rxnetty\0.4.9\rxnetty-0.4.9.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-core\2.3.0\ribbon-core-2.3.0.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-httpclient\2.3.0\ribbon-httpclient-2.3.0.jar;E:\APP\repository3\com\sun\jersey\jersey-client\1.19.1\jersey-client-1.19.1.jar;E:\APP\repository3\com\sun\jersey\jersey-core\1.19.1\jersey-core-1.19.1.jar;E:\APP\repository3\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;E:\APP\repository3\com\sun\jersey\contribs\jersey-apache-client4\1.19.1\jersey-apache-client4-1.19.1.jar;E:\APP\repository3\com\netflix\servo\servo-core\0.12.21\servo-core-0.12.21.jar;E:\APP\repository3\com\netflix\netflix-commons\netflix-commons-util\0.3.0\netflix-commons-util-0.3.0.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-loadbalancer\2.3.0\ribbon-loadbalancer-2.3.0.jar;E:\APP\repository3\com\netflix\netflix-commons\netflix-statistics\0.1.1\netflix-statistics-0.1.1.jar;E:\APP\repository3\io\reactivex\rxjava\1.3.8\rxjava-1.3.8.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-starter-dubbo\2.1.0.RELEASE\spring-cloud-starter-dubbo-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-alibaba-dubbo\2.1.0.RELEASE\spring-cloud-alibaba-dubbo-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-openfeign-core\2.1.0.RELEASE\spring-cloud-openfeign-core-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-aop\2.1.3.RELEASE\spring-boot-starter-aop-2.1.3.RELEASE.jar;E:\APP\repository3\org\aspectj\aspectjweaver\1.9.2\aspectjweaver-1.9.2.jar;E:\APP\repository3\io\github\openfeign\form\feign-form-spring\3.5.0\feign-form-spring-3.5.0.jar;E:\APP\repository3\io\github\openfeign\form\feign-form\3.5.0\feign-form-3.5.0.jar;E:\APP\repository3\commons-fileupload\commons-fileupload\1.3.3\commons-fileupload-1.3.3.jar;E:\APP\repository3\org\apache\dubbo\dubbo\2.7.3\dubbo-2.7.3.jar;E:\APP\repository3\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;E:\APP\repository3\org\apache\dubbo\dubbo-spring-boot-starter\2.7.1\dubbo-spring-boot-starter-2.7.1.jar;E:\APP\repository3\org\apache\dubbo\dubbo-spring-boot-autoconfigure\2.7.1\dubbo-spring-boot-autoconfigure-2.7.1.jar;E:\APP\repository3\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\2.7.1\dubbo-spring-boot-autoconfigure-compatible-2.7.1.jar;E:\APP\repository3\io\netty\netty-all\4.1.33.Final\netty-all-4.1.33.Final.jar;E:\APP\repository3\io\github\openfeign\feign-jaxrs2\9.7.0\feign-jaxrs2-9.7.0.jar;E:\APP\repository3\io\github\openfeign\feign-core\10.1.0\feign-core-10.1.0.jar;E:\APP\repository3\io\github\openfeign\feign-jaxrs\10.1.0\feign-jaxrs-10.1.0.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-web\2.1.3.RELEASE\spring-boot-starter-web-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-json\2.1.3.RELEASE\spring-boot-starter-json-2.1.3.RELEASE.jar;E:\APP\repository3\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;E:\APP\repository3\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;E:\APP\repository3\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-tomcat\2.1.3.RELEASE\spring-boot-starter-tomcat-2.1.3.RELEASE.jar;E:\APP\repository3\org\apache\tomcat\embed\tomcat-embed-core\9.0.16\tomcat-embed-core-9.0.16.jar;E:\APP\repository3\org\apache\tomcat\embed\tomcat-embed-el\9.0.16\tomcat-embed-el-9.0.16.jar;E:\APP\repository3\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.16\tomcat-embed-websocket-9.0.16.jar;E:\APP\repository3\org\hibernate\validator\hibernate-validator\6.0.14.Final\hibernate-validator-6.0.14.Final.jar;E:\APP\repository3\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;E:\APP\repository3\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;E:\APP\repository3\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;E:\APP\repository3\org\springframework\spring-web\5.1.5.RELEASE\spring-web-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-beans\5.1.5.RELEASE\spring-beans-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-webmvc\5.1.5.RELEASE\spring-webmvc-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-aop\5.1.5.RELEASE\spring-aop-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-context\5.1.5.RELEASE\spring-context-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-expression\5.1.5.RELEASE\spring-expression-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter\2.1.3.RELEASE\spring-boot-starter-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot\2.1.3.RELEASE\spring-boot-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-autoconfigure\2.1.3.RELEASE\spring-boot-autoconfigure-2.1.3.RELEASE.jar;E:\APP\repository3\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;E:\APP\repository3\org\springframework\spring-core\5.1.5.RELEASE\spring-core-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-jcl\5.1.5.RELEASE\spring-jcl-5.1.5.RELEASE.jar;E:\APP\repository3\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-log4j2\2.1.3.RELEASE\spring-boot-starter-log4j2-2.1.3.RELEASE.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-slf4j-impl\2.11.2\log4j-slf4j-impl-2.11.2.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-core\2.11.2\log4j-core-2.11.2.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-jul\2.11.2\log4j-jul-2.11.2.jar;E:\APP\repository3\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;E:\APP\repository3\org\springframework\boot\spring-boot-configuration-processor\2.1.3.RELEASE\spring-boot-configuration-processor-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-actuator\2.1.3.RELEASE\spring-boot-starter-actuator-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-actuator-autoconfigure\2.1.3.RELEASE\spring-boot-actuator-autoconfigure-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-actuator\2.1.3.RELEASE\spring-boot-actuator-2.1.3.RELEASE.jar;E:\APP\repository3\io\micrometer\micrometer-core\1.1.3\micrometer-core-1.1.3.jar;E:\APP\repository3\org\hdrhistogram\HdrHistogram\2.1.9\HdrHistogram-2.1.9.jar;E:\APP\repository3\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-test\2.1.3.RELEASE\spring-boot-starter-test-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-test\2.1.3.RELEASE\spring-boot-test-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-test-autoconfigure\2.1.3.RELEASE\spring-boot-test-autoconfigure-2.1.3.RELEASE.jar;E:\APP\repository3\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;E:\APP\repository3\net\minidev\json-smart\2.3\json-smart-2.3.jar;E:\APP\repository3\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;E:\APP\repository3\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;E:\APP\repository3\junit\junit\4.12\junit-4.12.jar;E:\APP\repository3\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;E:\APP\repository3\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;E:\APP\repository3\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;E:\APP\repository3\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;E:\APP\repository3\org\objenesis\objenesis\2.6\objenesis-2.6.jar;E:\APP\repository3\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\APP\repository3\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;E:\APP\repository3\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;E:\APP\repository3\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;E:\APP\repository3\org\springframework\spring-test\5.1.5.RELEASE\spring-test-5.1.5.RELEASE.jar;E:\APP\repository3\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;E:\APP\repository3\com\baomidou\mybatis-plus-boot-starter\3.1.0\mybatis-plus-boot-starter-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus\3.1.0\mybatis-plus-3.1.0.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-jdbc\2.1.3.RELEASE\spring-boot-starter-jdbc-2.1.3.RELEASE.jar;E:\APP\repository3\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;E:\APP\repository3\org\springframework\spring-jdbc\5.1.5.RELEASE\spring-jdbc-5.1.5.RELEASE.jar;E:\APP\repository3\com\baomidou\mybatis-plus-generator\3.1.0\mybatis-plus-generator-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus-extension\3.1.0\mybatis-plus-extension-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus-core\3.1.0\mybatis-plus-core-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus-annotation\3.1.0\mybatis-plus-annotation-3.1.0.jar;E:\APP\repository3\org\mybatis\mybatis\3.5.0\mybatis-3.5.0.jar;E:\APP\repository3\com\github\jsqlparser\jsqlparser\1.4\jsqlparser-1.4.jar;E:\APP\repository3\org\mybatis\mybatis-spring\2.0.0\mybatis-spring-2.0.0.jar;E:\APP\repository3\org\mybatis\mybatis-typehandlers-jsr310\1.0.2\mybatis-typehandlers-jsr310-1.0.2.jar;E:\APP\repository3\com\alibaba\druid-spring-boot-starter\1.1.16\druid-spring-boot-starter-1.1.16.jar;E:\APP\repository3\com\alibaba\druid\1.1.16\druid-1.1.16.jar;E:\APP\repository3\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;E:\APP\repository3\org\mapstruct\mapstruct\1.3.0.Final\mapstruct-1.3.0.Final.jar;E:\APP\repository3\org\mapstruct\mapstruct-processor\1.3.0.Final\mapstruct-processor-1.3.0.Final.jar;E:\APP\repository3\mysql\mysql-connector-java\8.0.11\mysql-connector-java-8.0.11.jar;E:\APP\repository3\com\google\protobuf\protobuf-java\2.6.0\protobuf-java-2.6.0.jar;E:\APP\repository3\com\alipay\sdk\alipay-sdk-java\3.7.73.ALL\alipay-sdk-java-3.7.73.ALL.jar;E:\APP\repository3\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;E:\APP\repository3\com\github\tedzhdz\wxpay-sdk\3.0.10\wxpay-sdk-3.0.10.jar;E:\APP\repository3\org\apache\httpcomponents\httpclient\4.5.7\httpclient-4.5.7.jar;E:\APP\repository3\org\apache\httpcomponents\httpcore\4.4.11\httpcore-4.4.11.jar;E:\APP\repository3\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;E:\APP\repository3\org\slf4j\slf4j-simple\1.7.25\slf4j-simple-1.7.25.jar;E:\APP\repository3\com\github\binarywang\weixin-java-pay\3.4.0\weixin-java-pay-3.4.0.jar;E:\APP\repository3\com\github\binarywang\weixin-java-common\3.4.0\weixin-java-common-3.4.0.jar;E:\APP\repository3\com\thoughtworks\xstream\xstream\1.4.10\xstream-1.4.10.jar;E:\APP\repository3\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;E:\APP\repository3\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;E:\APP\repository3\org\apache\httpcomponents\httpmime\4.5.7\httpmime-4.5.7.jar;E:\APP\repository3\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;E:\APP\repository3\commons-io\commons-io\2.5\commons-io-2.5.jar;E:\APP\repository3\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;E:\APP\repository3\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;E:\APP\repository3\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;E:\APP\repository3\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;E:\APP\repository3\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;E:\APP\repository3\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;E:\APP\repository3\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;E:\APP\repository3\com\github\binarywang\qrcode-utils\1.1\qrcode-utils-1.1.jar;E:\APP\repository3\org\jodd\jodd-http\3.7.1\jodd-http-3.7.1.jar;E:\APP\repository3\org\jodd\jodd-core\3.7.1\jodd-core-3.7.1.jar;E:\APP\repository3\org\jodd\jodd-upload\3.7.1\jodd-upload-3.7.1.jar;E:\APP\repository3\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;E:\APP\repository3\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;E:\APP\repository3\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;E:\APP\repository3\org\bouncycastle\bcpkix-jdk15on\1.59\bcpkix-jdk15on-1.59.jar;E:\APP\repository3\org\bouncycastle\bcprov-jdk15on\1.59\bcprov-jdk15on-1.59.jar;E:\APP\repository3\org\apache\commons\commons-pool2\2.6.1\commons-pool2-2.6.1.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-data-redis\2.1.3.RELEASE\spring-boot-starter-data-redis-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\data\spring-data-redis\2.1.5.RELEASE\spring-data-redis-2.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\data\spring-data-keyvalue\2.1.5.RELEASE\spring-data-keyvalue-2.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\data\spring-data-commons\2.1.5.RELEASE\spring-data-commons-2.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-tx\5.1.5.RELEASE\spring-tx-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-oxm\5.1.5.RELEASE\spring-oxm-5.1.5.RELEASE.jar;E:\APP\repository3\io\lettuce\lettuce-core\5.1.4.RELEASE\lettuce-core-5.1.4.RELEASE.jar;E:\APP\repository3\io\netty\netty-common\4.1.33.Final\netty-common-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-handler\4.1.33.Final\netty-handler-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-buffer\4.1.33.Final\netty-buffer-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-codec\4.1.33.Final\netty-codec-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-transport\4.1.33.Final\netty-transport-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-resolver\4.1.33.Final\netty-resolver-4.1.33.Final.jar;E:\APP\repository3\io\projectreactor\reactor-core\3.2.6.RELEASE\reactor-core-3.2.6.RELEASE.jar;E:\APP\repository3\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-freemarker\2.1.3.RELEASE\spring-boot-starter-freemarker-2.1.3.RELEASE.jar;E:\APP\repository3\org\freemarker\freemarker\2.3.28\freemarker-2.3.28.jar;E:\APP\repository3\org\springframework\spring-context-support\5.1.5.RELEASE\spring-context-support-5.1.5.RELEASE.jar;E:\APP\repository3\com\shanjupay\shanjupay-merchant-api\1.0-SNAPSHOT\shanjupay-merchant-api-1.0-SNAPSHOT.jar;E:\APP\repository3\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;E:\APP\repository3\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;E:\APP\repository3\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Shanghai"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="CN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="E:\APP\jdk\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\Lenovo\AppData\Local\Temp\surefire4610720328981729270\surefirebooter5017218175541070728.jar C:\Users\Lenovo\AppData\Local\Temp\surefire4610720328981729270 2020-12-24T11-25-18_631-jvmRun1 surefire6169762589321933019tmp surefire_08535160604868912924tmp"/>
    <property name="surefire.test.class.path" value="D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\test-classes;D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes;D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-api\target\shanjupay-transaction-api-1.0-SNAPSHOT.jar;E:\APP\repository3\com\shanjupay\shanjupay-common\1.0-SNAPSHOT\shanjupay-common-1.0-SNAPSHOT.jar;E:\APP\repository3\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;E:\APP\repository3\io\springfox\springfox-swagger2\2.9.2\springfox-swagger2-2.9.2.jar;E:\APP\repository3\io\swagger\swagger-annotations\1.5.20\swagger-annotations-1.5.20.jar;E:\APP\repository3\io\swagger\swagger-models\1.5.20\swagger-models-1.5.20.jar;E:\APP\repository3\io\springfox\springfox-spi\2.9.2\springfox-spi-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-core\2.9.2\springfox-core-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-schema\2.9.2\springfox-schema-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-swagger-common\2.9.2\springfox-swagger-common-2.9.2.jar;E:\APP\repository3\io\springfox\springfox-spring-web\2.9.2\springfox-spring-web-2.9.2.jar;E:\APP\repository3\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;E:\APP\repository3\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;E:\APP\repository3\io\springfox\springfox-swagger-ui\2.9.2\springfox-swagger-ui-2.9.2.jar;E:\APP\repository3\org\projectlombok\lombok\1.18.0\lombok-1.18.0.jar;E:\APP\repository3\com\qiniu\qiniu-java-sdk\7.2.25\qiniu-java-sdk-7.2.25.jar;E:\APP\repository3\com\squareup\okhttp3\okhttp\3.9.1\okhttp-3.9.1.jar;E:\APP\repository3\com\squareup\okio\okio\1.13.0\okio-1.13.0.jar;E:\APP\repository3\com\google\code\gson\gson\2.8.2\gson-2.8.2.jar;E:\APP\repository3\com\alibaba\fastjson\1.2.47\fastjson-1.2.47.jar;E:\APP\repository3\com\google\zxing\core\3.3.3\core-3.3.3.jar;E:\APP\repository3\com\google\zxing\javase\3.3.3\javase-3.3.3.jar;E:\APP\repository3\com\beust\jcommander\1.72\jcommander-1.72.jar;E:\APP\repository3\com\github\jai-imageio\jai-imageio-core\1.4.0\jai-imageio-core-1.4.0.jar;E:\APP\repository3\com\shanjupay\shanjupay-payment-agent-api\1.0-SNAPSHOT\shanjupay-payment-agent-api-1.0-SNAPSHOT.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-starter-alibaba-nacos-config\2.1.0.RELEASE\spring-cloud-starter-alibaba-nacos-config-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-alibaba-nacos-config\2.1.0.RELEASE\spring-cloud-alibaba-nacos-config-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\nacos\nacos-client\1.1.1\nacos-client-1.1.1.jar;E:\APP\repository3\com\alibaba\nacos\nacos-common\1.1.1\nacos-common-1.1.1.jar;E:\APP\repository3\com\alibaba\nacos\nacos-api\1.1.1\nacos-api-1.1.1.jar;E:\APP\repository3\io\prometheus\simpleclient\0.5.0\simpleclient-0.5.0.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-commons\2.1.0.RELEASE\spring-cloud-commons-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\security\spring-security-crypto\5.1.4.RELEASE\spring-security-crypto-5.1.4.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-context\2.1.0.RELEASE\spring-cloud-context-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-starter-alibaba-nacos-discovery\2.1.0.RELEASE\spring-cloud-starter-alibaba-nacos-discovery-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-alibaba-nacos-discovery\2.1.0.RELEASE\spring-cloud-alibaba-nacos-discovery-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-starter-netflix-ribbon\2.1.0.RELEASE\spring-cloud-starter-netflix-ribbon-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-starter\2.1.0.RELEASE\spring-cloud-starter-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\security\spring-security-rsa\1.0.7.RELEASE\spring-security-rsa-1.0.7.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-netflix-ribbon\2.1.0.RELEASE\spring-cloud-netflix-ribbon-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-netflix-archaius\2.1.0.RELEASE\spring-cloud-netflix-archaius-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-starter-netflix-archaius\2.1.0.RELEASE\spring-cloud-starter-netflix-archaius-2.1.0.RELEASE.jar;E:\APP\repository3\com\netflix\archaius\archaius-core\0.7.6\archaius-core-0.7.6.jar;E:\APP\repository3\commons-configuration\commons-configuration\1.8\commons-configuration-1.8.jar;E:\APP\repository3\com\netflix\ribbon\ribbon\2.3.0\ribbon-2.3.0.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-transport\2.3.0\ribbon-transport-2.3.0.jar;E:\APP\repository3\io\reactivex\rxnetty-contexts\0.4.9\rxnetty-contexts-0.4.9.jar;E:\APP\repository3\io\reactivex\rxnetty-servo\0.4.9\rxnetty-servo-0.4.9.jar;E:\APP\repository3\com\netflix\hystrix\hystrix-core\1.5.18\hystrix-core-1.5.18.jar;E:\APP\repository3\javax\inject\javax.inject\1\javax.inject-1.jar;E:\APP\repository3\io\reactivex\rxnetty\0.4.9\rxnetty-0.4.9.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-core\2.3.0\ribbon-core-2.3.0.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-httpclient\2.3.0\ribbon-httpclient-2.3.0.jar;E:\APP\repository3\com\sun\jersey\jersey-client\1.19.1\jersey-client-1.19.1.jar;E:\APP\repository3\com\sun\jersey\jersey-core\1.19.1\jersey-core-1.19.1.jar;E:\APP\repository3\javax\ws\rs\jsr311-api\1.1.1\jsr311-api-1.1.1.jar;E:\APP\repository3\com\sun\jersey\contribs\jersey-apache-client4\1.19.1\jersey-apache-client4-1.19.1.jar;E:\APP\repository3\com\netflix\servo\servo-core\0.12.21\servo-core-0.12.21.jar;E:\APP\repository3\com\netflix\netflix-commons\netflix-commons-util\0.3.0\netflix-commons-util-0.3.0.jar;E:\APP\repository3\com\netflix\ribbon\ribbon-loadbalancer\2.3.0\ribbon-loadbalancer-2.3.0.jar;E:\APP\repository3\com\netflix\netflix-commons\netflix-statistics\0.1.1\netflix-statistics-0.1.1.jar;E:\APP\repository3\io\reactivex\rxjava\1.3.8\rxjava-1.3.8.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-starter-dubbo\2.1.0.RELEASE\spring-cloud-starter-dubbo-2.1.0.RELEASE.jar;E:\APP\repository3\com\alibaba\cloud\spring-cloud-alibaba-dubbo\2.1.0.RELEASE\spring-cloud-alibaba-dubbo-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\cloud\spring-cloud-openfeign-core\2.1.0.RELEASE\spring-cloud-openfeign-core-2.1.0.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-aop\2.1.3.RELEASE\spring-boot-starter-aop-2.1.3.RELEASE.jar;E:\APP\repository3\org\aspectj\aspectjweaver\1.9.2\aspectjweaver-1.9.2.jar;E:\APP\repository3\io\github\openfeign\form\feign-form-spring\3.5.0\feign-form-spring-3.5.0.jar;E:\APP\repository3\io\github\openfeign\form\feign-form\3.5.0\feign-form-3.5.0.jar;E:\APP\repository3\commons-fileupload\commons-fileupload\1.3.3\commons-fileupload-1.3.3.jar;E:\APP\repository3\org\apache\dubbo\dubbo\2.7.3\dubbo-2.7.3.jar;E:\APP\repository3\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;E:\APP\repository3\org\apache\dubbo\dubbo-spring-boot-starter\2.7.1\dubbo-spring-boot-starter-2.7.1.jar;E:\APP\repository3\org\apache\dubbo\dubbo-spring-boot-autoconfigure\2.7.1\dubbo-spring-boot-autoconfigure-2.7.1.jar;E:\APP\repository3\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\2.7.1\dubbo-spring-boot-autoconfigure-compatible-2.7.1.jar;E:\APP\repository3\io\netty\netty-all\4.1.33.Final\netty-all-4.1.33.Final.jar;E:\APP\repository3\io\github\openfeign\feign-jaxrs2\9.7.0\feign-jaxrs2-9.7.0.jar;E:\APP\repository3\io\github\openfeign\feign-core\10.1.0\feign-core-10.1.0.jar;E:\APP\repository3\io\github\openfeign\feign-jaxrs\10.1.0\feign-jaxrs-10.1.0.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-web\2.1.3.RELEASE\spring-boot-starter-web-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-json\2.1.3.RELEASE\spring-boot-starter-json-2.1.3.RELEASE.jar;E:\APP\repository3\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;E:\APP\repository3\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;E:\APP\repository3\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-tomcat\2.1.3.RELEASE\spring-boot-starter-tomcat-2.1.3.RELEASE.jar;E:\APP\repository3\org\apache\tomcat\embed\tomcat-embed-core\9.0.16\tomcat-embed-core-9.0.16.jar;E:\APP\repository3\org\apache\tomcat\embed\tomcat-embed-el\9.0.16\tomcat-embed-el-9.0.16.jar;E:\APP\repository3\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.16\tomcat-embed-websocket-9.0.16.jar;E:\APP\repository3\org\hibernate\validator\hibernate-validator\6.0.14.Final\hibernate-validator-6.0.14.Final.jar;E:\APP\repository3\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;E:\APP\repository3\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;E:\APP\repository3\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;E:\APP\repository3\org\springframework\spring-web\5.1.5.RELEASE\spring-web-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-beans\5.1.5.RELEASE\spring-beans-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-webmvc\5.1.5.RELEASE\spring-webmvc-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-aop\5.1.5.RELEASE\spring-aop-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-context\5.1.5.RELEASE\spring-context-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-expression\5.1.5.RELEASE\spring-expression-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter\2.1.3.RELEASE\spring-boot-starter-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot\2.1.3.RELEASE\spring-boot-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-autoconfigure\2.1.3.RELEASE\spring-boot-autoconfigure-2.1.3.RELEASE.jar;E:\APP\repository3\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;E:\APP\repository3\org\springframework\spring-core\5.1.5.RELEASE\spring-core-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-jcl\5.1.5.RELEASE\spring-jcl-5.1.5.RELEASE.jar;E:\APP\repository3\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-log4j2\2.1.3.RELEASE\spring-boot-starter-log4j2-2.1.3.RELEASE.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-slf4j-impl\2.11.2\log4j-slf4j-impl-2.11.2.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-core\2.11.2\log4j-core-2.11.2.jar;E:\APP\repository3\org\apache\logging\log4j\log4j-jul\2.11.2\log4j-jul-2.11.2.jar;E:\APP\repository3\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;E:\APP\repository3\org\springframework\boot\spring-boot-configuration-processor\2.1.3.RELEASE\spring-boot-configuration-processor-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-actuator\2.1.3.RELEASE\spring-boot-starter-actuator-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-actuator-autoconfigure\2.1.3.RELEASE\spring-boot-actuator-autoconfigure-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-actuator\2.1.3.RELEASE\spring-boot-actuator-2.1.3.RELEASE.jar;E:\APP\repository3\io\micrometer\micrometer-core\1.1.3\micrometer-core-1.1.3.jar;E:\APP\repository3\org\hdrhistogram\HdrHistogram\2.1.9\HdrHistogram-2.1.9.jar;E:\APP\repository3\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-test\2.1.3.RELEASE\spring-boot-starter-test-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-test\2.1.3.RELEASE\spring-boot-test-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\boot\spring-boot-test-autoconfigure\2.1.3.RELEASE\spring-boot-test-autoconfigure-2.1.3.RELEASE.jar;E:\APP\repository3\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;E:\APP\repository3\net\minidev\json-smart\2.3\json-smart-2.3.jar;E:\APP\repository3\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;E:\APP\repository3\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;E:\APP\repository3\junit\junit\4.12\junit-4.12.jar;E:\APP\repository3\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;E:\APP\repository3\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;E:\APP\repository3\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;E:\APP\repository3\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;E:\APP\repository3\org\objenesis\objenesis\2.6\objenesis-2.6.jar;E:\APP\repository3\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\APP\repository3\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;E:\APP\repository3\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;E:\APP\repository3\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;E:\APP\repository3\org\springframework\spring-test\5.1.5.RELEASE\spring-test-5.1.5.RELEASE.jar;E:\APP\repository3\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;E:\APP\repository3\com\baomidou\mybatis-plus-boot-starter\3.1.0\mybatis-plus-boot-starter-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus\3.1.0\mybatis-plus-3.1.0.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-jdbc\2.1.3.RELEASE\spring-boot-starter-jdbc-2.1.3.RELEASE.jar;E:\APP\repository3\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;E:\APP\repository3\org\springframework\spring-jdbc\5.1.5.RELEASE\spring-jdbc-5.1.5.RELEASE.jar;E:\APP\repository3\com\baomidou\mybatis-plus-generator\3.1.0\mybatis-plus-generator-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus-extension\3.1.0\mybatis-plus-extension-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus-core\3.1.0\mybatis-plus-core-3.1.0.jar;E:\APP\repository3\com\baomidou\mybatis-plus-annotation\3.1.0\mybatis-plus-annotation-3.1.0.jar;E:\APP\repository3\org\mybatis\mybatis\3.5.0\mybatis-3.5.0.jar;E:\APP\repository3\com\github\jsqlparser\jsqlparser\1.4\jsqlparser-1.4.jar;E:\APP\repository3\org\mybatis\mybatis-spring\2.0.0\mybatis-spring-2.0.0.jar;E:\APP\repository3\org\mybatis\mybatis-typehandlers-jsr310\1.0.2\mybatis-typehandlers-jsr310-1.0.2.jar;E:\APP\repository3\com\alibaba\druid-spring-boot-starter\1.1.16\druid-spring-boot-starter-1.1.16.jar;E:\APP\repository3\com\alibaba\druid\1.1.16\druid-1.1.16.jar;E:\APP\repository3\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;E:\APP\repository3\org\mapstruct\mapstruct\1.3.0.Final\mapstruct-1.3.0.Final.jar;E:\APP\repository3\org\mapstruct\mapstruct-processor\1.3.0.Final\mapstruct-processor-1.3.0.Final.jar;E:\APP\repository3\mysql\mysql-connector-java\8.0.11\mysql-connector-java-8.0.11.jar;E:\APP\repository3\com\google\protobuf\protobuf-java\2.6.0\protobuf-java-2.6.0.jar;E:\APP\repository3\com\alipay\sdk\alipay-sdk-java\3.7.73.ALL\alipay-sdk-java-3.7.73.ALL.jar;E:\APP\repository3\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;E:\APP\repository3\com\github\tedzhdz\wxpay-sdk\3.0.10\wxpay-sdk-3.0.10.jar;E:\APP\repository3\org\apache\httpcomponents\httpclient\4.5.7\httpclient-4.5.7.jar;E:\APP\repository3\org\apache\httpcomponents\httpcore\4.4.11\httpcore-4.4.11.jar;E:\APP\repository3\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;E:\APP\repository3\org\slf4j\slf4j-simple\1.7.25\slf4j-simple-1.7.25.jar;E:\APP\repository3\com\github\binarywang\weixin-java-pay\3.4.0\weixin-java-pay-3.4.0.jar;E:\APP\repository3\com\github\binarywang\weixin-java-common\3.4.0\weixin-java-common-3.4.0.jar;E:\APP\repository3\com\thoughtworks\xstream\xstream\1.4.10\xstream-1.4.10.jar;E:\APP\repository3\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;E:\APP\repository3\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;E:\APP\repository3\org\apache\httpcomponents\httpmime\4.5.7\httpmime-4.5.7.jar;E:\APP\repository3\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;E:\APP\repository3\commons-io\commons-io\2.5\commons-io-2.5.jar;E:\APP\repository3\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar;E:\APP\repository3\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;E:\APP\repository3\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;E:\APP\repository3\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;E:\APP\repository3\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;E:\APP\repository3\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;E:\APP\repository3\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;E:\APP\repository3\com\github\binarywang\qrcode-utils\1.1\qrcode-utils-1.1.jar;E:\APP\repository3\org\jodd\jodd-http\3.7.1\jodd-http-3.7.1.jar;E:\APP\repository3\org\jodd\jodd-core\3.7.1\jodd-core-3.7.1.jar;E:\APP\repository3\org\jodd\jodd-upload\3.7.1\jodd-upload-3.7.1.jar;E:\APP\repository3\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;E:\APP\repository3\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;E:\APP\repository3\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;E:\APP\repository3\org\bouncycastle\bcpkix-jdk15on\1.59\bcpkix-jdk15on-1.59.jar;E:\APP\repository3\org\bouncycastle\bcprov-jdk15on\1.59\bcprov-jdk15on-1.59.jar;E:\APP\repository3\org\apache\commons\commons-pool2\2.6.1\commons-pool2-2.6.1.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-data-redis\2.1.3.RELEASE\spring-boot-starter-data-redis-2.1.3.RELEASE.jar;E:\APP\repository3\org\springframework\data\spring-data-redis\2.1.5.RELEASE\spring-data-redis-2.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\data\spring-data-keyvalue\2.1.5.RELEASE\spring-data-keyvalue-2.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\data\spring-data-commons\2.1.5.RELEASE\spring-data-commons-2.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-tx\5.1.5.RELEASE\spring-tx-5.1.5.RELEASE.jar;E:\APP\repository3\org\springframework\spring-oxm\5.1.5.RELEASE\spring-oxm-5.1.5.RELEASE.jar;E:\APP\repository3\io\lettuce\lettuce-core\5.1.4.RELEASE\lettuce-core-5.1.4.RELEASE.jar;E:\APP\repository3\io\netty\netty-common\4.1.33.Final\netty-common-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-handler\4.1.33.Final\netty-handler-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-buffer\4.1.33.Final\netty-buffer-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-codec\4.1.33.Final\netty-codec-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-transport\4.1.33.Final\netty-transport-4.1.33.Final.jar;E:\APP\repository3\io\netty\netty-resolver\4.1.33.Final\netty-resolver-4.1.33.Final.jar;E:\APP\repository3\io\projectreactor\reactor-core\3.2.6.RELEASE\reactor-core-3.2.6.RELEASE.jar;E:\APP\repository3\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;E:\APP\repository3\org\springframework\boot\spring-boot-starter-freemarker\2.1.3.RELEASE\spring-boot-starter-freemarker-2.1.3.RELEASE.jar;E:\APP\repository3\org\freemarker\freemarker\2.3.28\freemarker-2.3.28.jar;E:\APP\repository3\org\springframework\spring-context-support\5.1.5.RELEASE\spring-context-support-5.1.5.RELEASE.jar;E:\APP\repository3\com\shanjupay\shanjupay-merchant-api\1.0-SNAPSHOT\shanjupay-merchant-api-1.0-SNAPSHOT.jar;E:\APP\repository3\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;E:\APP\repository3\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;E:\APP\repository3\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Lenovo"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="E:\APP\jdk\jre"/>
    <property name="basedir" value="D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\Lenovo\AppData\Local\Temp\surefire4610720328981729270\surefirebooter5017218175541070728.jar"/>
    <property name="sun.boot.class.path" value="E:\APP\jdk\jre\lib\resources.jar;E:\APP\jdk\jre\lib\rt.jar;E:\APP\jdk\jre\lib\sunrsasign.jar;E:\APP\jdk\jre\lib\jsse.jar;E:\APP\jdk\jre\lib\jce.jar;E:\APP\jdk\jre\lib\charsets.jar;E:\APP\jdk\jre\lib\jfr.jar;E:\APP\jdk\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_251-b08"/>
    <property name="user.name" value="Lenovo"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="E:\APP\jdk\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="GBK"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="E:\APP\repository3"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Lenovo\AppData\Local\Temp\"/>
    <property name="idea.version" value="2018.1.6"/>
    <property name="java.version" value="1.8.0_251"/>
    <property name="user.dir" value="D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="E:\APP\jdk\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:\vm\bin\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;E:\svn\bin;E:\nodejs\;E:\Git\cmd;E:\tsvn\bin;C:\Program Files\Common Files\Autodesk Shared\;E:\apache-maven-3.6.3\bin;E:\APP\jdk\bin;E:\apache-maven-3.6.3\bin;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;E:\Microsoft VS Code\bin;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.251-b08"/>
    <property name="java.ext.dirs" value="E:\APP\jdk\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="maven.repo.local" value="E:\APP\repository3"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testqueryPayChannelByPlatformChannel" classname="com.shanjupay.transaction.TestPayChannelService" time="0.008">
    <error message="Failed to load ApplicationContext" type="java.lang.IllegalStateException">java.lang.IllegalStateException: Failed to load ApplicationContext
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'appPlatformChannelMapper' defined in file [D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\mapper\AppPlatformChannelMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
Caused by: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
</error>
    <system-out><![CDATA[[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:30,713 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelService], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:30,730 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelService]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:30,731 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelService]: TestPayChannelService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:30,885 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelService
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:31,027 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:31,054 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@79c97cb, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2d9caaeb, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@42a15bdc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@44a59da3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@27e47833, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6f6745d6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@27508c5d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4f704591, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4b5189ac, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1e4d3ce5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3ddc6915, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@704deff2]
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:33,054 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:33,060 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:33,067 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:33,587 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5e51fda9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:33,691 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:35,288 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.3.RELEASE)

[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,426 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,430 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-starter-druid.yaml,data:spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver‐class‐name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shanjupay_merchant_service?useUnicode=true&serverTimezone=Asia/Shanghai
    username: root
    password: root
    druid:
      initial‐size: 5
      min‐idle: 5
      max‐active: 20
      max‐wait: 60000
      time‐between‐eviction‐runs‐millis: 60000
      min‐evictable‐idle‐time‐millis: 300000
      validation‐query: SELECT 1 FROM DUAL
      test‐while‐idle: true
      test‐on‐borrow: true
      test‐on‐return: false
      pool‐prepared‐statements: true
      max‐pool‐prepared‐statement‐per‐connection‐size: 20
      filter:
        stat:
          slow‐sql‐millis: 1
          log‐slow‐sql: true
      filters: config,stat,wall,log4j2
      web‐stat‐filter:
        enabled: true
        url‐pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session‐stat‐enable: false
        session‐stat‐max‐count: 1000
        principal‐cookie‐name: admin
        principal‐session‐name: admin
        profile‐enable: true
      stat‐view‐servlet:
        enabled: true
        url‐pattern: /druid/*
        allow: 127.0.0.1,192.168.163.1
        deny: 192.168.1.73
        reset‐enable: false
        login‐password: admin
        login‐username: admin
      aop‐patterns: com.shanjupay.*.service.*,
org.yaml.snakeyaml.error.YAMLException: java.nio.charset.MalformedInputException: Input length = 1
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:218)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:176)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:171)
	at org.yaml.snakeyaml.reader.StreamReader.peek(StreamReader.java:126)
	at org.yaml.snakeyaml.scanner.ScannerImpl.scanToNextToken(ScannerImpl.java:1177)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:287)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart.produce(ParserImpl.java:195)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.checkNode(Composer.java:72)
	at org.yaml.snakeyaml.constructor.BaseConstructor.checkData(BaseConstructor.java:112)
	at org.yaml.snakeyaml.Yaml$1.hasNext(Yaml.java:542)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.nio.charset.MalformedInputException: Input length = 1
	at java.nio.charset.CoderResult.throwException(CoderResult.java:281)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:339)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at org.yaml.snakeyaml.reader.UnicodeReader.read(UnicodeReader.java:125)
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:183)
	... 55 more
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,454 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,455 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-mybatis-plus.yaml,data:mybatis‐plus:
    configuration:
        cache‐enabled: false
        map‐underscore‐to‐camel‐case: true
    global‐config:
        id‐type: 0
        field‐strategy: 0
        db‐column‐underline: true
        refresh‐mapper: true
    typeAliasesPackage: com.shanjupay.user.entity
    mapper‐locations: classpath:com/shanjupay/*/mapper/*.xml,
org.yaml.snakeyaml.error.YAMLException: java.nio.charset.MalformedInputException: Input length = 1
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:218)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:176)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:171)
	at org.yaml.snakeyaml.reader.StreamReader.peek(StreamReader.java:126)
	at org.yaml.snakeyaml.scanner.ScannerImpl.scanToNextToken(ScannerImpl.java:1177)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:287)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart.produce(ParserImpl.java:195)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.checkNode(Composer.java:72)
	at org.yaml.snakeyaml.constructor.BaseConstructor.checkData(BaseConstructor.java:112)
	at org.yaml.snakeyaml.Yaml$1.hasNext(Yaml.java:542)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.nio.charset.MalformedInputException: Input length = 1
	at java.nio.charset.CoderResult.throwException(CoderResult.java:281)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:339)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at org.yaml.snakeyaml.reader.UnicodeReader.read(UnicodeReader.java:125)
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:183)
	... 55 more
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,478 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,479 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:transaction-service.yaml,data:# 覆盖spring‐boot‐http.yaml的项目
server:
  servlet:
    context‐path: /transaction
# 覆盖spring‐boot‐starter‐druid.yaml的项目
spring:
  application:
    name: transaction-service
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/shanjupay_transaction?useUnicode=true&serverTimezone=Asia/Shanghai
      username: root
      password: root
  # 覆盖spring‐boot‐mybatis‐plus.yaml的项目
  mybatis‐plus:
    typeAliasesPackage: com.shanjupay.transaction.entity
    mapper‐locations: classpath:com/shanjupay/*/mapper/*.xml
#支付入口url
shanjupay:
  payurl: "http://127.0.0.1:56010/transaction/pay‐entry/"
,
org.yaml.snakeyaml.error.YAMLException: java.nio.charset.MalformedInputException: Input length = 1
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:218)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:176)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:171)
	at org.yaml.snakeyaml.reader.StreamReader.peek(StreamReader.java:126)
	at org.yaml.snakeyaml.scanner.ScannerImpl.scanToNextToken(ScannerImpl.java:1177)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:287)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart.produce(ParserImpl.java:195)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.checkNode(Composer.java:72)
	at org.yaml.snakeyaml.constructor.BaseConstructor.checkData(BaseConstructor.java:112)
	at org.yaml.snakeyaml.Yaml$1.hasNext(Yaml.java:542)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadApplicationConfiguration(NacosPropertySourceLocator.java:155)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:88)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.nio.charset.MalformedInputException: Input length = 1
	at java.nio.charset.CoderResult.throwException(CoderResult.java:281)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:339)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at org.yaml.snakeyaml.reader.UnicodeReader.read(UnicodeReader.java:125)
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:183)
	... 55 more
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,481 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-redis.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:36,535 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,751 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,756 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,805 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,807 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,808 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,809 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,809 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,809 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,810 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:37,811 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,129 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,136 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,201 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,348 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,497 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 169.254.69.120
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,497 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 169.254.69.120
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,586 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 169.254.69.120
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,588 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.TransactionService, dubbo version: 2.7.3, current host: 169.254.69.120
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,589 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 2 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class], Bean definition with name 'transactionServiceImpl': Generic bean: class [com.shanjupay.transaction.service.TransactionServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\TransactionServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 169.254.69.120
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,594 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,594 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:38,912 INFO [main][GenericScope.java:294] - BeanFactory id=2abcbd28-8142-3285-8951-2aa40d484cfe
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,193 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4237faac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,395 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$c5f949b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,433 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,468 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,493 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,506 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,509 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,511 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$3838e62a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,522 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$cae2ee82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,534 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,541 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,550 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$8b28283c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,560 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$7ef33101] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,583 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$9e5c430] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,600 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:39,605 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:41,168 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:41,173 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:41,193 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:41,199 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$5756c10a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,652 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,655 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,659 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,663 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,779 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,780 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,825 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,847 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,854 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$8f798ce0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,868 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,876 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$c94f88e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,885 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$9dcb7a3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,895 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$50183c56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,904 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b2f2245] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,912 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,919 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,929 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$31fa9973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,946 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,953 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$7fd717cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,968 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,973 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,982 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:42,987 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,027 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,045 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,054 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$5c6bc640] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,068 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,074 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,084 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,095 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,097 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,119 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,136 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,143 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,148 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,180 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5e51fda9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,367 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,502 WARN [main][AbstractApplicationContext.java:557] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'appPlatformChannelMapper' defined in file [D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\mapper\AppPlatformChannelMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,505 INFO [main][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,505 INFO [main][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,530 INFO [main][ConditionEvaluationReportLoggingListener.java:142] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,531 INFO [main][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,537 ERROR [main][LoggingFailureAnalysisReporter.java:42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

[${project.name}][${env:SERVER_PORT}] 2020-12-24 11:25:43,538 ERROR [main][TestContextManager.java:250] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@79c97cb] to prepare test instance [com.shanjupay.transaction.TestPayChannelService@77083e41]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'appPlatformChannelMapper' defined in file [D:\11111\进修课资料\09.基于微服务构建闪聚支付项目\day05 支付渠道参数配置 Redis\代码\shanjupay\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\mapper\AppPlatformChannelMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1499)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 27 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484)
	... 43 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	... 56 more
Caused by: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:236)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineUsername(DataSourceProperties.java:333)
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper.afterPropertiesSet(DruidDataSourceWrapper.java:40)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 67 more
]]></system-out>
    <system-err><![CDATA[SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/E:/APP/repository3/org/apache/logging/log4j/log4j-slf4j-impl/2.11.2/log4j-slf4j-impl-2.11.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/E:/APP/repository3/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]
]]></system-err>
  </testcase>
</testsuite>